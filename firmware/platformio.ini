; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = debug
;default_envs = release

[env]
lib_deps = bblanchon/ArduinoJson@^7.0.4
    ; adafruit/Adafruit TinyUSB Library@^3.3.1
    ; TinyUSB library with a tiny modification for working around a deadlock issue.
    Adafruit TinyUSB Library=https://github.com/palthedog/Adafruit_TinyUSB_Arduino

platform = https://github.com/maxgerhardt/platform-raspberrypi.git
framework = arduino
board_build.core = earlephilhower
; udong_board config inherits from the pico board
; https://github.com/maxgerhardt/platform-raspberrypi/blob/1ab176cd4d4edd38a156e0c25e12e86ad96b21ef/boards/pico.json
board = pico
board_name = Udong Board
; W25Q128JVS: 128bits FLASH memory
board_upload.maximum_size = 16777216
board_build.filesystem_size = 8m

platform_packages =
	framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git#3.9.2
build_flags = -std=c++20 -Wall
    -DUSE_TINYUSB
    -DCFG_TUSB_CONFIG_FILE=\"udong_tusb_config.h\"
    -Iinclude


; Debuger settings
; Raspberry Pi Debug Probe is compatible with CMSIS-DAP:
;     https://www.raspberrypi.com/products/debug-probe/
debug_tool = cmsis-dap
; If you want to upload the firmware via the Debug Probe, uncomment the following line.
; It might be useful if you have multiple RP2040 boards connected to your PC
; (you don't want to flash your other board, right?)
; upload_protocol = cmsis-dap

;; Unit tests
test_framework = unity
test_build_src = no

extra_scripts =
    ; We have to use a extra script to update an array value...
    pre:custom_hwids.py
    ; Wait for a few second after uploading the firmware (before starting the test)
    ; Because the test runner tries to connect to the serial port immediately after uploading.
    ; However, USB Serial port for monitoring might not be ready at that time.
    post:extra_wait.py

[env:release]
build_type = release
build_flags =
    ${env.build_flags}
    -DNDEBUG
    -O3
build_unflags = -Os

[env:debug]
build_type = debug
build_flags =
    ${env.build_flags}
    -DDEBUG

;; For Raspberry Pi Pico
[env:pico_debug]
build_type = debug
board = pico
; 2MB FLASH memory
board_upload.maximum_size = 2097152
board_build.filesystem_size = 1m
build_flags =
    ${env.build_flags}
    -DDEBUG

[env:embedded_tests]
extends = env:release
lib_deps =
  ${env.lib_deps}
  throwtheswitch/Unity@^2.5.2
debug_tool = cmsis-dap
upload_protocol = cmsis-dap
; Hrm... PlatformIO's auto detection works poorly...
test_port = COM9
